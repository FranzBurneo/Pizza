/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Package;

import antlr.ByteBuffer;
import com.hp.hpl.jena.query.QuerySolution;
import com.hp.hpl.jena.rdf.model.RDFNode;
import java.nio.charset.Charset;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Ali Saidi
 */
public class DisplayFrame extends javax.swing.JFrame {

    /**
     * Creates new form DisplayFrame
     */
    public ArrayList<String> ListNames = new ArrayList<String>();  // for name list
    public ArrayList<String> ListVegetables = new ArrayList<String>();  // for name list
    public ArrayList<String> ListPepper = new ArrayList<String>();  // for name list
    public ArrayList<String> ListCheese = new ArrayList<String>();  // for name list
    public ArrayList<String> ListMeat = new ArrayList<String>();  // for name list
    public ArrayList<String> ListSeafood = new ArrayList<String>();  // for name list
    DefaultTableModel modelo;

    public DisplayFrame() {
        initComponents();
        DefaultTableModel modelo;
        modelo = new DefaultTableModel();
        modelo.addColumn("Pan base");
        modelo.addColumn("Queso");
        modelo.addColumn("Carne");
        modelo.addColumn("Salsa");
        modelo.addColumn("Marisco");
        modelo.addColumn("Vegetales");
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jComBoxNameList = new javax.swing.JComboBox();
        jButtonCargar = new javax.swing.JButton();
        jButtonIngredientesVeganos = new javax.swing.JButton();
        jButtonIngredientes = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jComboBox2 = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jComboBox3 = new javax.swing.JComboBox<>();
        jComboBox4 = new javax.swing.JComboBox<>();
        jComboBox5 = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButtonCargar.setText("Pizzas");
        jButtonCargar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCargarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addComponent(jButtonCargar)
                .addGap(42, 42, 42)
                .addComponent(jComBoxNameList, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(383, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonCargar)
                    .addComponent(jComBoxNameList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(31, Short.MAX_VALUE))
        );

        jButtonIngredientesVeganos.setText("Ingredientes veganos");
        jButtonIngredientesVeganos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonIngredientesVeganosActionPerformed(evt);
            }
        });

        jButtonIngredientes.setText("Ingredientes");
        jButtonIngredientes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonIngredientesActionPerformed(evt);
            }
        });

        jLabel1.setText("Vegetables");

        jLabel2.setText("Peppers");

        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jLabel3.setText("CheeseTopping");

        jLabel4.setText("MeatTopping");

        jLabel5.setText("SeafoodTopping");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(42, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addComponent(jButtonIngredientesVeganos, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(47, 47, 47)
                        .addComponent(jButtonIngredientes, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(107, 107, 107))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(18, 18, 18)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jComboBox5, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonIngredientes)
                    .addComponent(jButtonIngredientesVeganos))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(115, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonIngredientesVeganosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonIngredientesVeganosActionPerformed
        // TODO add your handling code here:
        try {
            // OntModel model = OpenOWL.OpenConnectOWL();

            System.out.println("List VegetablesTopping:");  // get the name list querry
            String queryString;
            queryString = "PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>"
                    + "PREFIX saidi:<http://www.semanticweb.org/msigf65thin/ontologies/2021/5/PizzaTutorial#>"
                    + "SELECT *"
                    + "WHERE { ?S rdfs:subClassOf saidi:VegetablesTopping .}";

            com.hp.hpl.jena.query.ResultSet results = OpenOWL.ExecSparQl(queryString); //all method ExecSparQl from OpenOWL class

            while (results.hasNext()) {

                QuerySolution soln = results.nextSolution();
                String NameOfPerson = soln.getResource("S").getLocalName();
                //test --
                System.out.println(NameOfPerson);
                ListVegetables.add(NameOfPerson);
            }
            jComboBox1.removeAllItems(); //  combobox nameList
            for (int i = 1; i < ListVegetables.size(); i++) {

                jComboBox1.addItem(ListVegetables.get(i));
            }
            //PepperTopping
            System.out.println("List PepperTopping:");  // get the name list querry
            String queryString2;
            queryString2 = "PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>"
                    + "PREFIX saidi:<http://www.semanticweb.org/msigf65thin/ontologies/2021/5/PizzaTutorial#>"
                    + "SELECT *"
                    + "WHERE { ?S rdfs:subClassOf saidi:PepperTopping}";

            com.hp.hpl.jena.query.ResultSet results2 = OpenOWL.ExecSparQl(queryString2); //all method ExecSparQl from OpenOWL class

            while (results2.hasNext()) {

                QuerySolution soln2 = results2.nextSolution();
                String NameOfPerson2 = soln2.getResource("S").getLocalName();
                //test --
                System.out.println(NameOfPerson2);
                ListPepper.add(NameOfPerson2);
            }
            jComboBox2.removeAllItems(); //  combobox nameList
            for (int i = 1; i < ListPepper.size(); i++) {

                jComboBox2.addItem(ListPepper.get(i));
            }
        } catch (Exception ex) {
            ex.printStackTrace();
        }

    }//GEN-LAST:event_jButtonIngredientesVeganosActionPerformed

    private void jButtonCargarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCargarActionPerformed
        // TODO add your handling code here:

        try {
            // OntModel model = OpenOWL.OpenConnectOWL();

            System.out.println("Listar pizzas");  // get the name list querry
            String queryString;
            queryString = "PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>"
                    + "PREFIX saidi:<http://www.semanticweb.org/msigf65thin/ontologies/2021/5/PizzaTutorial#>"
                    + "SELECT *"
                    + "WHERE { ?S rdfs:subClassOf saidi:NamedPizza}";

            com.hp.hpl.jena.query.ResultSet results = OpenOWL.ExecSparQl(queryString); //all method ExecSparQl from OpenOWL class

            while (results.hasNext()) {

                QuerySolution soln = results.nextSolution();
                String NameOfPerson = soln.getResource("S").getLocalName();
                //test --
                System.out.println(NameOfPerson);
                ListNames.add(NameOfPerson);
            }
            jComBoxNameList.removeAllItems(); //  combobox nameList
            for (int i = 1; i < ListNames.size(); i++) {

                jComBoxNameList.addItem(ListNames.get(i));
            }
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_jButtonCargarActionPerformed

    private void jButtonIngredientesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonIngredientesActionPerformed
        // TODO add your handling code here:
        try {
            // OntModel model = OpenOWL.OpenConnectOWL();

            System.out.println("List VegetablesTopping:");  // get the name list querry
            String queryString;
            queryString = "PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>"
                    + "PREFIX saidi:<http://www.semanticweb.org/msigf65thin/ontologies/2021/5/PizzaTutorial#>"
                    + "SELECT *"
                    + "WHERE { ?S rdfs:subClassOf saidi:VegetablesTopping .}";

            com.hp.hpl.jena.query.ResultSet results = OpenOWL.ExecSparQl(queryString); //all method ExecSparQl from OpenOWL class

            while (results.hasNext()) {

                QuerySolution soln = results.nextSolution();
                String NameOfPerson = soln.getResource("S").getLocalName();
                //test --
                System.out.println(NameOfPerson);
                ListVegetables.add(NameOfPerson);
            }
            jComboBox1.removeAllItems(); //  combobox nameList
            
            for (int i = 1; i < ListVegetables.size(); i++) {

                jComboBox1.addItem(ListVegetables.get(i));
            }
            //PepperTopping
            System.out.println("List PepperTopping:");  // get the name list querry
            String queryString2;
            queryString2 = "PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>"
                    + "PREFIX saidi:<http://www.semanticweb.org/msigf65thin/ontologies/2021/5/PizzaTutorial#>"
                    + "SELECT *"
                    + "WHERE { ?S rdfs:subClassOf saidi:PepperTopping}";

            com.hp.hpl.jena.query.ResultSet results2 = OpenOWL.ExecSparQl(queryString2); //all method ExecSparQl from OpenOWL class

            while (results2.hasNext()) {

                QuerySolution soln2 = results2.nextSolution();
                String NameOfPerson2 = soln2.getResource("S").getLocalName();
                //test --
                System.out.println(NameOfPerson2);
                ListPepper.add(NameOfPerson2);
            }
            jComboBox2.removeAllItems(); //  combobox nameList
            for (int i = 1; i < ListPepper.size(); i++) {

                jComboBox2.addItem(ListPepper.get(i));
            }
            //CheeseTopping
            System.out.println("List CheeseTopping:");  // get the name list querry
            String queryString3;
            queryString3 = "PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>"
                    + "PREFIX saidi:<http://www.semanticweb.org/msigf65thin/ontologies/2021/5/PizzaTutorial#>"
                    + "SELECT *"
                    + "WHERE { ?S rdfs:subClassOf saidi:CheeseTopping}";

            com.hp.hpl.jena.query.ResultSet results3 = OpenOWL.ExecSparQl(queryString3); //all method ExecSparQl from OpenOWL class

            while (results3.hasNext()) {

                QuerySolution soln3 = results3.nextSolution();
                String NameOfPerson3 = soln3.getResource("S").getLocalName();
                //test --
                System.out.println(NameOfPerson3);
                ListCheese.add(NameOfPerson3);
            }
            jComboBox3.removeAllItems(); //  combobox nameList
            for (int i = 1; i < ListCheese.size(); i++) {

                jComboBox3.addItem(ListCheese.get(i));
            }
            //MeatTopping
            System.out.println("List MeatTopping:");  // get the name list querry
            String queryString4;
            queryString4 = "PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>"
                    + "PREFIX saidi:<http://www.semanticweb.org/msigf65thin/ontologies/2021/5/PizzaTutorial#>"
                    + "SELECT *"
                    + "WHERE { ?S rdfs:subClassOf saidi:MeatTopping}";

            com.hp.hpl.jena.query.ResultSet results4 = OpenOWL.ExecSparQl(queryString4); //all method ExecSparQl from OpenOWL class

            while (results4.hasNext()) {

                QuerySolution soln4 = results4.nextSolution();
                String NameOfPerson4 = soln4.getResource("S").getLocalName();
                //test --
                System.out.println(NameOfPerson4);
                ListMeat.add(NameOfPerson4);
            }
            jComboBox4.removeAllItems(); //  combobox nameList
            for (int i = 1; i < ListMeat.size(); i++) {

                jComboBox4.addItem(ListMeat.get(i));
            }
            //Seafood
            System.out.println("List SeafoodTopping:");  // get the name list querry
            String queryString5;
            queryString5 = "PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>"
                    + "PREFIX saidi:<http://www.semanticweb.org/msigf65thin/ontologies/2021/5/PizzaTutorial#>"
                    + "SELECT *"
                    + "WHERE { ?S rdfs:subClassOf saidi:SeafoodTopping}";

            com.hp.hpl.jena.query.ResultSet results5 = OpenOWL.ExecSparQl(queryString5); //all method ExecSparQl from OpenOWL class

            while (results5.hasNext()) {

                QuerySolution soln5 = results5.nextSolution();
                String NameOfPerson5 = soln5.getResource("S").getLocalName();
                //test --
                System.out.println(NameOfPerson5);
                ListSeafood.add(NameOfPerson5);
            }
            jComboBox5.removeAllItems(); //  combobox nameList
            for (int i = 1; i < ListSeafood.size(); i++) {

                jComboBox5.addItem(ListSeafood.get(i));
            }
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_jButtonIngredientesActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DisplayFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DisplayFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DisplayFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DisplayFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DisplayFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCargar;
    private javax.swing.JButton jButtonIngredientes;
    private javax.swing.JButton jButtonIngredientesVeganos;
    private javax.swing.JComboBox jComBoxNameList;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JComboBox<String> jComboBox3;
    private javax.swing.JComboBox<String> jComboBox4;
    private javax.swing.JComboBox<String> jComboBox5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    // End of variables declaration//GEN-END:variables

    public void obtenerPanBase() {
        try {
            // OntModel model = OpenOWL.OpenConnectOWL();

            System.out.println("Getting ListNames");  // get the name list querry
            String queryString;
            queryString = "PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>"
                    + "PREFIX saidi:<http://www.semanticweb.org/msigf65thin/ontologies/2021/5/PizzaTutorial#>"
                    + "SELECT *"
                    + "WHERE { ?S rdfs:subClassOf saidi:PizzaBase}";

            com.hp.hpl.jena.query.ResultSet results = OpenOWL.ExecSparQl(queryString); //all method ExecSparQl from OpenOWL class

            while (results.hasNext()) {

                QuerySolution soln = results.nextSolution();
                String NameOfPerson = soln.getResource("S").getLocalName();
                //test --
                System.out.println("S " + NameOfPerson.toString());
                ListNames.add(NameOfPerson.toString());

                // RDFNode x = soln.get("Propertyval");
                // String xx = String.valueOf(x);
                // java.nio.ByteBuffer xxx = Charset.forName("UTF-8").encode(xx);
                // String xs = xxx.toString();
            }
            jComBoxNameList.removeAllItems(); //  combobox nameList
            for (int i = 0; i < ListNames.size(); i++) {

                jComBoxNameList.addItem(ListNames.get(i));
                
            }
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }

}
